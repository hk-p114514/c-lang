問題(15)-1
構造体とは、

typedef struct {
	int gakunen;
	int kumi;
	char name[ 20 ];
} student;

のように、互いに関連のあるデータをまとめて1つの型として宣言する機能である。
また、配列とは違い異なる型を混在させることもできる。

問題(16)-1
typedef文は、既存の型や構造体を
新たな型として定義するという働きを持っている。

問題(17)-1
ポインタとは、変数等の配置されている
メモリ上のアドレスを示す値のことで、
ポインタを格納する変数をポインタ変数という。
ポインタは単なるアドレスではなく、
データが占めるメモリ上の領域を指す概念であり、
参照先のデータ型の情報も保持している。
そのため、ある要素を指しているポインタに「+1」するだけで、
正確に次の要素を指すことができる。

問題(17)-3
i = (int)p;
理由:int型は4バイトなのに対して、ポインタ型は8バイトであり、
ポインタ型のpをint型にキャストすると、その値が壊れてしまうから。

q = &p;
理由:&pは、ポインタ変数*pの指す先の値のアドレスを格納している
領域のアドレスであり、つまりはポインタのポインタなので、
それを単なるポインタ変数に代入すると、型の不適合が起こってしまうから。

*p = &j
理由:&jはint型の変数jのアドレスであり、その型はポインタ型となる。
*pはポインタ変数pの指す先の値を示し、その型はint型である。
*pと&jは別の型なので、代入しようとすると型の不適合が起こってしまう。

i = (*&)j;
理由:*&は型ではないので、(*&)jという風に、
キャストを行うことはできず、その時点でコンパイルエラーとなるから。